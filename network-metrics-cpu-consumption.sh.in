#!/bin/bash

#  This file is part of cc-oci-runtime.
#
#  Copyright (C) 2017 Intel Corporation
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Description:
#  Measures cpu % consumption using an inter (docker<->docker) 
#  network bandwidth using iperf2

SCRIPT_PATH=$(dirname "$(readlink -f "$0")")

source "${SCRIPT_PATH}/../../lib/test-common.bash"
source "${SCRIPT_PATH}/lib/network-test-common.bash"

# This script will perform all the measurements using a local setup

# Measures cpu % consumption while running bandwidth measurements
# using iperf2

function cpu_consumption {
	# Port number where the server will run
	local port=5001:5001
	# Using this image as iperf is not working
	# see (https://github.com/01org/cc-oci-runtime/issues/152)
	# Image name
	local image=gabyct/network
	# Total measurement time (seconds)
	# This is required in order to reduce standard deviation
	local total_time=16
	# This time (seconds) is required when
	# server and client are more stable, we need to
	# have server and client running for sometime and we
	# need to avoid to measure at the beginning of the running
	local middle_time=8
	# Name of the containers
	local server_name="network-server"
	local client_name="network-client"
	# Arguments to run the client
	local extra_args="-d"

	setup
	local server_command="iperf -p ${port} -s"
	local server_address=$(start_server "$server_name" "$image" "$server_command")

	local client_command="iperf -c ${server_address} -t ${total_time}"
	start_client "$extra_args" "$client_name" "$image" "$client_command" > /dev/null

	# Measurement after client and server are more stable
	echo >&2 "WARNING: sleeping for $middle_time seconds in order to have server and client stable"
	sleep ${middle_time}
	qemu_pids=$(pidof @QEMU_PATH@)
	ps --no-headers -o %cpu -p "$qemu_pids" > "$result"
	sed -i 's/ //g' "$result"
	local total_cpu_consumption=$(awk '{ total += $1 } END { print total/NR }' "$result")
	echo "The cpu % consumption is : $total_cpu_consumption"

	clean_environment "$server_name"
	$DOCKER_EXE rm -f ${client_name} > /dev/null
}

cpu_consumption
