#!/bin/bash

source ./run_docker_metrics.dat

# Verify that test-common.bash is generated.
SCRIPT_PATH=$(dirname "$(readlink -f "$0")")
[ -f "${SCRIPT_PATH}/../lib/test-common.bash" ] || \
	{ echo "Required files are not generated, please run 'sudo make metrics-tests' from top level of this repo" \
	&& exit 1; }


RESULT_DIR="./results"

if [ ! -d "$RESULT_DIR" ]; then
	mkdir "$RESULT_DIR"
fi

# complete workload : docker run --runtime $runtime -tid $image $cmd
bash workload_time/docker_workload_time.sh true ubuntu runc "$TIMES"
bash workload_time/docker_workload_time.sh true ubuntu cor "$TIMES"
bash workload_time/docker_workload_time_stress.sh true clearlinux cor
bash workload_time/docker_workload_time_stress.sh true clearlinux runc

# time that cc-oci-run-time takes to create a container:
bash workload_time/cor_create_time.sh "$TIMES"

# time to stop container using docker: docker stop $container_id
bash workload_time/docker_shutdown.sh runc "$TIMES"
bash workload_time/docker_shutdown.sh cor "$TIMES"

# density (CPU and Memory)
bash density/docker_cpu_usage.sh "$TIMES" "$CPU_WAIT_TIME"
bash density/docker_memory_usage.sh "$MEM_CONTAINERS" "$MEM_WAIT_TIME"

# kernel boot time
bash workload_time/kernel_boot_time.sh "$TIMES"
bash workload_time/kernel_boot_time_stress.sh
