#!/bin/bash

#  This file is part of cc-oci-runtime.
#
#  Copyright (C) 2016 Intel Corporation
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#  Description of the test:
#  This test launches certain number of containers and puts them into
#  sleep mode for a certain period of time. Then the test checks the
#  amount of memory used by each container
#  This test uses psstop tool to get the memory used.

set -e

[ $# -ne 2 ] && ( echo >&2 "Usage: $0 <times to run> <wait time>"; exit 1 )

SCRIPT_PATH=$(dirname "$(readlink -f "$0")")
source "${SCRIPT_PATH}/../common/test.common"

CMD='sh'
IMAGE='ubuntu'
TIMES="$1"
WAIT_TIME="$2"
TEST_NAME="Qemu Memory Usage"
TEST_ARGS="rootfs=${IMAGE} units=kb"
TEST_RESULT_FILE=$(echo "${RESULT_DIR}/${TEST_NAME}" | sed 's| |-|g')
SMEM_BIN=$(command -v smem || true)
QEMU_BIN="@QEMU_PATH@"

function get_docker_memory_usage(){
	for i in $(seq 1 "$TIMES"); do
		${DOCKER_EXE} run -tid $IMAGE $CMD
	done
	sleep "$WAIT_TIME"
	for i in $("$SMEM_BIN" --no-header -P "^$QEMU_BIN" | awk '{print $6}'); do
		test_data=$i
		write_result_to_file "$TEST_NAME" "$TEST_ARGS" "$test_data" "$TEST_RESULT_FILE"
	done
}

echo "Executing Test: ${TEST_NAME}"
if [ ! -f $SMEM_BIN ]; then
	die "${SMEM_BIN} is not installed in your system, skipping test"
fi
backup_old_file "$TEST_RESULT_FILE"
write_csv_header "$TEST_RESULT_FILE"
get_docker_memory_usage
get_average "$TEST_RESULT_FILE"
clean_docker_ps
