#!/bin/bash

#  This file is part of cc-oci-runtime.
#
#  Copyright (C) 2016 Intel Corporation
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#  Description of the test:
#  This test checks the CPU usage of several idle containers and
#  containers that are working running shuf.
#  The measure is take after the workload has become stable.
#  By default this tests run 100 containers and waits 2m to stabilize the
#  workloads.

set -e

[ $# -ne 2 ] && ( echo >&2 "Usage: $0 <times to run> <wait time>"; exit 1 )

SCRIPT_PATH=$(dirname "$(readlink -f "$0")")
source "${SCRIPT_PATH}/../../lib/test-common.bash"

TEST_NAME="Qemu CPU % usage"
IMAGE='ubuntu'
RUNTIME='cor'
TIMES="$1"
WAIT_TIME="$2"

function get_idle_cpu_usage(){
	containers=()
	testArgs="rootfs=${IMAGE} idle_mode"
	testResultFile="${RESULT_DIR}/cpu-usage-idle"
	backup_old_file "$testResultFile"
	write_csv_header "$testResultFile"
	if [ $RUNTIME == 'cor' ]; then
		for i in $(seq 1 "$TIMES"); do
			containers+=($(random_name))
			$DOCKER_EXE run --name ${containers[-1]} -tid $IMAGE bash
		done
		sleep "$WAIT_TIME"
		qemu_pids=$(pgrep -f @QEMU_PATH@)
		cpu_usage=$(ps --no-headers -o %cpu -p $qemu_pids)
		for i in $cpu_usage; do
			test_data=$i
			write_result_to_file "$TEST_NAME" "$testArgs" "$test_data" "$testResultFile"
		done
		get_average "$testResultFile"
		docker rm -f ${containers[@]}
	else
		echo "Runtime: ${RUNTIME} is not valid for this test"
	fi
}

function get_working_cpu_usage(){
	containers=()
	testArgs="rootfs=${IMAGE} working_mode"
	testResultFile="${RESULT_DIR}/cpu-usage-working"
	backup_old_file "$testResultFile"
	write_csv_header "$testResultFile"
	if [ $RUNTIME == 'cor' ]; then
		for i in $(seq 1 "$TIMES"); do
			containers+=($(random_name))
			$DOCKER_EXE run --name ${containers[-1]} -tid $IMAGE bash -c "shuf -i 1-10000000 -n 500000"
		done
		sleep "$WAIT_TIME"
		qemu_pids=$(pgrep -f @QEMU_PATH@)
		cpu_usage=$(ps --no-headers -o %cpu -p $qemu_pids)
		for i in $cpu_usage; do
			test_data=$i
			write_result_to_file "$TEST_NAME" "$testArgs" "$test_data" "$testResultFile"
		done
		get_average "$testResultFile"
		docker rm -f ${containers[@]}
	else
		echo "Runtime: ${RUNTIME} is not valid for this test"
	fi
}

echo "Executing Test: ${TEST_NAME}"
get_idle_cpu_usage
get_working_cpu_usage
